SQL> --SYS계정은 되도록 ㅅ ㅏ용을 지양하도록 한다
SQL> --사용이 부담스러움
SQL> --SYS보다는 하위의 관리자인 SYSTEM을 이용하자
SQL> --SYS계정으로 로그인 한 상태에서 SYSTEM에 계정을 재할당 하겠습니다.
SQL> ALTER USER SYSTEM
  2  IDENTIFIED BY 1234;

User altered.

SQL> SYSTEM/1234
SP2-0734: unknown command beginning "SYSTEM/123..." - rest of line ignored.
SQL> --이미 SQLPLUS에 접속을 한 상태에서 다른 계정으로 전환할 때는 SQLPLUS 호출하지 마시오
SQL> --접속을 전환하는 명령어는 CONNECT 혹은 CONN을 사용하도록 하자.
SQL> CONN SYSTEM/1234
Connected.
SQL> SHOW USER
USER is "SYSTEM"
SQL> ED
Wrote file afiedt.buf

  1  ALTER USER SYSTEM
  2* IDENTIFIED BY 1234
SQL> ;
  1  ALTER USER SYSTEM
  2* IDENTIFIED BY 1234
SQL> --현재 시스템에 존재하는 모든 유저를 알고 싶다.
SQL> --그러면 우리는 TABLE을 뒤적뒤적해야함
SQL> --오라클에서 시스템만이 알고있는 정보를 알기 위해서는 사전
SQL> --현재 접속자가 관리자인경우 사전의 이름은 접두어가 DBA_혹은 V$로 시작작
SQL> SELECT USERNAME FROM DBA_USERS;

USERNAME                                                                        
------------------------------------------------------------                    
SYS                                                                             
SYSTEM                                                                          
ANONYMOUS                                                                       
JAVA                                                                            
JS                                                                              
APEX_PUBLIC_USER                                                                
FLOWS_FILES                                                                     
APEX_040000                                                                     
OUTLN                                                                           
DIP                                                                             
ORACLE_OCM                                                                      

USERNAME                                                                        
------------------------------------------------------------                    
XS$NULL                                                                         
MDSYS                                                                           
CTXSYS                                                                          
DBSNMP                                                                          
XDB                                                                             
APPQOSSYS                                                                       
HR                                                                              

18 rows selected.

SQL> --일반계정인 JS로 로그인 하겠습니다.
SQL> CONN JS/1234
Connected.
SQL> SHOW USER;
USER is "JS"
SQL> --제약조건 추가적으로 학습 할 것.
SQL> --NOT NULL
SQL> --DEFAULT
SQL> --UNIQUE, CHECK +
SQL> PRIMARY KEY, FOREIGN KEY.
SP2-0734: unknown command beginning "PRIMARY KE..." - rest of line ignored.
SQL> --PRIMARY KEY, FOREIGN KEY.
SQL> --JS는 어떠한 테이블을 가지고 있나요,,,?
SQL> --시스템 정보를 조회하기 위해(사전을 조회), 현재 계정이 일반계정이기 때문에 사전이름은
SQL> --USER_ 로 시작할 가능성이 농후
SQL> SELECT TABLE_NAME FROM USER_TABLES;

TABLE_NAME                                                                      
------------------------------------------------------------                    
MEMBER                                                                          

SQL> SELECT * FROM MEMBER;

no rows selected

SQL> --제약조건중 너무너무 필수적인 제약조건인 PRIMARY KEY를 배워보도록 합시다.
SQL> --UNIQUE + NOT NULL;
SQL> --UNIQUE만으로는 아직 무결성을 보장받을 수 없다.
SQL> --예시이다.
SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20)
  3  , EMAIL VARCHAR2(25)
  4  , REGDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> DROP TABLE MEMBER2;

Table dropped.

SQL> --유니크안줘서 작제하고 다시 만듦
SQL> CREATE TABLE MEMBER2(
  2  ID VARCHAR2(20) UNIQUE
  3  , EMAIL VARCHAR2(25) NOT NULL
  4  , REGDATE DATE DEFAULT SYSDATE
  5  );

Table created.

SQL> INSERT INTO MEMBER2(ID,EMAIL) VALUES('KING', 'DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(ID,EMAIL) VALUES('KING', 'DAUM');
INSERT INTO MEMBER2(ID,EMAIL) VALUES('KING', 'DAUM')
*
ERROR at line 1:
ORA-00001: unique constraint (JS.SYS_C007007) violated 


SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');', '
  2  INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');', '
  3  INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');
INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');', '
                                         *
ERROR at line 1:
ORA-00911: invalid character 


SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> INSERT INTO MEMBER2(EMAIL) VALUES('DAUM');

1 row created.

SQL> SELECT * FROM MEMBER2;

ID                                                                              
----------------------------------------                                        
EMAIL                                              REGDATE                      
-------------------------------------------------- --------                     
KING                                                                            
DAUM                                               25/05/07                     
                                                                                
                                                                                
DAUM                                               25/05/07                     
                                                                                
                                                                                
DAUM                                               25/05/07                     
                                                                                

ID                                                                              
----------------------------------------                                        
EMAIL                                              REGDATE                      
-------------------------------------------------- --------                     
                                                                                
DAUM                                               25/05/07                     
                                                                                

SQL> --데이터 구분을 위한 숫자컬럼을 하나 더 항상 만드시오.
SQL> --그떄 필요한 것이 PRIMARY KEY.
SQL> --UNIQUE는 중복을 허용하지 않는 장치이긴 하나, NULL을 허용해 버린다.
SQL> --따라서 TABLE에 입력된 데이터들 간의 구분을 위한 숫자형 컬럼을 추가할 때는
SQL> --UNIQUE에다가 NOT NULL을 합친 제약조건을 부여해야 안전함.
SQL> --BUT, UNIQUE와 NOT NULL을 굳이 둘다 명시하기보다, 합쳐져서 하나로 존재하는 PRIMARY KEY를
SQL> --사용하는 것이 바람직하다.
SQL> CREATE TABLE MEMBER3(
  2  ID NUMBER PRIMARY KEY
  3  , EMAIL VARCHAR2(25)
  4  , REGDATE DATE DEFAULT SYSDATE
  5  , USERID VARCHAR2(20)
  6  );

Table created.

SQL> SET LINE 400;
SQL> --PRIMARY KEY값은 유일해야 하므로, 시스템이 알아서 증가시켜가며 스스로 넣도록 맡기자.
SQL> --따라서 오직 숫자값 만을 전용으로 증가시켜주는 객체인 시퀀스를 이용해야 한다.
SQL> SELECT * FROM MEMBER3;

no rows selected

SQL> CREATE SEQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;
CREATE SEQUENCE SEQ_MEMBER3
*
ERROR at line 1:
ORA-01031: insufficient privileges 


SQL> --권한은 SYSTEM이상만 줄 수 있으므로 다시 SYSTEM에 다녀오자
SQL> CONN SYSTEM/1234
Connected.
SQL> GRANT CREATE SEQUENCE TO JS;

Grant succeeded.

SQL> CONN JS/1234
Connected.
SQL> CREATE SEQUENCE SEQ_MEMBER3
  2  INCREMENT BY 1
  3  START WITH 1;

Sequence created.

SQL> --시퀀스 생성 했으므로, 명령만 하면 됨
SQL> INSERT INTO MEMBER3(ID,USERID,EMAIL)
  2  VALUES(SEQ_MEMBER3.NEXTVAL, 'KING', 'DAUM');

1 row created.

SQL> INSERT INTO MEMBER3(ID,USERID,EMAIL)
  2  VALUES(SEQ_MEMBER3.NEXTVAL, 'ADAMS', 'NAVER');

1 row created.

SQL> SELECT * FROM MEMBER3;

        ID EMAIL                                              REGDATE  USERID                                                                                                                                                                                                                                                                                                                                   
---------- -------------------------------------------------- -------- ----------------------------------------                                                                                                                                                                                                                                                                                                 
         1 DAUM                                               25/05/07 KING                                                                                                                                                                                                                                                                                                                                     
         2 NAVER                                              25/05/07 ADAMS                                                                                                                                                                                                                                                                                                                                    

SQL> SPOOL OFF;
