SQL> --MYSQL과 혼합하여 하겠습니다.
SQL> --현재 유저가 보유한 테이블을 보고싶은 경우
SQL> --MYSQL의 경우 SHOW TALBES 명령이지만,
SQL> --ORACLE의 경우 시스템의 정보를 얻기 위해서는 사전이라불리는
SQL> --즉, DICTIONARY를 조회할 줄 알아야 한다.
SQL> --수백여개의 DICTIONARY를 개발자가 암기해야 하나?
SQL> --DIC에 어느정도의 명명규칙이 존재함
SQL> --현재 접속한 사용자 계정이 일반계정인경우 접두어가 USER_ 로 시작
SQL> --현재 접속한 계정이 관리자인경우(SYS등..)DBA_ V$ 로 시작
SQL> SELECT TABLE_NAME FROM USER_TABLES;

TABLE_NAME                                                                      
------------------------------------------------------------                    
MEMBERSHIP                                                                      
MEMBER                                                                          

SQL> --DDL중 제거하는 명령어느 DROP입니다.
SQL> --DDL중 제거하는 명령어는 DROP입니다.
SQL> DROP TABLE MEMBERSHIP;

Table dropped.

SQL> DROP TABLE MEMBER;

Table dropped.

SQL> --앞으로 테이블을 만들때는 까다롭게 제약을 가하자(칼럼에)
SQL> --제약조건(CONSTRAINT)T)
SQL> --UNIQUE - 레코드는 유일한 것만 받아들이겠다.
SQL> --NOT NULL - 값이 없는건 허용하지 않겠다.
SQL> --CHECK - 지정된 값만 허용하겠다.
SQL> --DEFAULT - 아무런 값을 넣지 않으면 자동으로 값을 지정하겠다.
SQL> --제약조건을 부여해서 테이블 실습
SQL> CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  , NAME VARCHAR(30) NOT NULL
  4  , NAME VARCHAR2(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  , CHECK CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7  );
, NAME VARCHAR2(6)
  *
ERROR at line 4:
ORA-00957: duplicate column name 


SQL> ED
Wrote file afiedt.buf

  1  CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  , NAME VARCHAR2(30) NOT NULL
  4  , GENDER VARCHAR2(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  , CHECK CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7* )
SQL> RUN
  1  CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  , NAME VARCHAR2(30) NOT NULL
  4  , GENDER VARCHAR2(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  , CHECK CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7* )
, CHECK CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
        *
ERROR at line 6:
ORA-00906: missing left parenthesis 


SQL> ED
Wrote file afiedt.buf

  1  CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  , NAME VARCHAR2(30) NOT NULL
  4  , GENDER VARCHAR2(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  , CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7* )
SQL> RUN
  1  CREATE TABLE MEMBER(
  2  ID VARCHAR2(20) UNIQUE
  3  , NAME VARCHAR2(30) NOT NULL
  4  , GENDER VARCHAR2(6)
  5  ,REGDATE DATE DEFAULT SYSDATE
  6  , CONSTRAINT CHK_MEMBER CHECK (GENDER='남' OR GENDER='여')
  7* )

Table created.

SQL> --제약조건이 동작하는지 테스트하자
SQL> INSERT INTO MEMBER(ID,GENDER) VALUES('ADAMS','남');
INSERT INTO MEMBER(ID,GENDER) VALUES('ADAMS','남')
*
ERROR at line 1:
ORA-01400: cannot insert NULL into ("JS"."MEMBER"."NAME") 


SQL> INSERT INTO MEMBER(ID,GENDER) VALUES('ADAMS','놈');
INSERT INTO MEMBER(ID,GENDER) VALUES('ADAMS','놈')
*
ERROR at line 1:
ORA-01400: cannot insert NULL into ("JS"."MEMBER"."NAME") 


SQL> INSERT INTO MEMBER(ID,GENDER,NAME) VALUES('ADAMS','남','아담스');

1 row created.

SQL> SELECT * FROM MEMBER;

ID                                                                              
----------------------------------------                                        
NAME                                                         GENDER             
------------------------------------------------------------ ------------       
REGDATE                                                                         
--------                                                                        
ADAMS                                                                           
아담스                                                       남                 
25/04/30                                                                        
                                                                                

SQL> SET LINE 400;
SQL> SELECT * FROM MEMBER;

ID                                       NAME                                                         GENDER       REGDATE                                                                                                                                                                                                                                                                                      
---------------------------------------- ------------------------------------------------------------ ------------ --------                                                                                                                                                                                                                                                                                     
ADAMS                                    아담스                                                       남           25/04/30                                                                                                                                                                                                                                                                                     

SQL> SPOOL OFF;
